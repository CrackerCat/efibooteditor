name: Prepare release assets

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  build-linux:
    name: ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang
          - GCC
        include:
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: Clang
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: GCC

    permissions:
      actions: read
      contents: read
      security-events: write

    uses: ./.github/workflows/build.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      build-config: RelWithDebInfo
      version: ${{ github.ref_name }}

  build-windows:
    name: ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang
          - MSVC

    permissions:
      actions: read
      contents: read
      security-events: write

    uses: ./.github/workflows/build.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      build-config: RelWithDebInfo
      version: ${{ github.ref_name }}

  build-macos:
    name: ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang

    permissions:
      actions: read
      contents: read
      security-events: write

    uses: ./.github/workflows/build.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      build-config: RelWithDebInfo
      version: ${{ github.ref_name }}

  upload-linux-asset:
    name: Upload Linux release asset ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }} ${{ matrix.extension }}
    if: github.ref_type == 'tag'
    needs: build-linux
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang
          - GCC
        extension:
          - .tar.zst
          - .deb
          - -dbgsym.ddeb
        include:
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: Clang
            extension: .tar.zst
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: Clang
            extension: .deb
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: Clang
            extension: -dbgsym.ddeb
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: GCC
            extension: .tar.zst
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: GCC
            extension: .deb
          - os: ubuntu-18.04
            qt-version: 5.15.2
            compiler: GCC
            extension: -dbgsym.ddeb

    uses: ./.github/workflows/asset.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      version: ${{ github.ref_name }}
      extension: ${{ matrix.extension }}

  upload-windows-asset:
    name: Upload Windows release asset ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }} ${{ matrix.extension }}
    if: github.ref_type == 'tag'
    needs: build-windows
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang
          - MSVC
        extension:
          - .zip
          - .msi

    uses: ./.github/workflows/asset.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      version: ${{ github.ref_name }}
      extension: ${{ matrix.extension }}

  upload-macos-asset:
    name: Upload MacOS release asset ${{ matrix.os }} Qt ${{ matrix.qt-version }} with ${{ matrix.compiler }} ${{ matrix.extension }}
    if: github.ref_type == 'tag'
    needs: build-macos
    strategy:
      matrix:
        os: [macos-11, macos-12]
        qt-version:
          - 5.15.2 # OS LTS
          - 6.2.4 # LTS Standard
          - 6.4.3 # latest
        compiler:
          - Clang
        extension:
          - .tar.zst
          - .dmg

    uses: ./.github/workflows/asset.yml
    with:
      os: ${{ matrix.os }}
      qt-version: ${{ matrix.qt-version }}
      compiler: ${{ matrix.compiler }}
      version: ${{ github.ref_name }}
      extension: ${{ matrix.extension }}

  winget-update:
    name: Update version in winget
    if: github.ref_type == 'tag'
    needs: upload-windows-asset
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-2022]
        qt-version:
          - 6.4.3 # latest
        compiler:
          - MSVC
    steps:
      - name: Create PR in winget-pkgs repository
        run: |
          iwr https://aka.ms/wingetcreate/latest -OutFile wingetcreate.exe
          .\wingetcreate.exe update EFIBootEditor.EFIBootEditor -u https://github.com/Neverous/efibooteditor/releases/download/${{ github.ref_name }}/EFIBootEditor-${{ github.ref_name }}-${{ matrix.os }}-qt-${{ matrix.qt-version }}-${{ matrix.compiler }}.msi -v $Env:GITHUB_REF_NAME.Substring(1) -t ${{ secrets.BOT_ACCESS_TOKEN }} --submit
